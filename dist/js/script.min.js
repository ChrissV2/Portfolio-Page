"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){var o;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(o="Object"===(o=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:o)||"Set"===o?Array.from(t):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(t,e):void 0}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var o=0,r=new Array(e);o<e;o++)r[o]=t[o];return r}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,_toPropertyKey(r.key),r)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0===o)return("string"===e?String:Number)(t);o=o.call(t,e||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}var blob,photoContainer,photos,myElement,bounding,myElementHeight,myElementWidth,sliderContainer,sliderItems,sliderControlsContainer,sliderControls,body,contactFormLabels,contactFormTextArea,contactFormTextAreaLabel,label,textAreaLabel,portfolioCarousel,hamburgerBtn,navMenu,navMenuItems,main=function(){prepareDOMElements(),prepareDOMEvents()},prepareDOMElements=function(){blob=document.querySelector(".blob"),photoContainer=document.querySelector(".aboutme__container"),photos=document.querySelectorAll(".aboutme__container-photo"),myElement=document.getElementById("aboutmePhoto"),bounding=myElement.getBoundingClientRect(),myElementHeight=myElement.offsetHeight-400,myElementWidth=myElement.offsetWidth,sliderContainer=document.querySelector(".portfolio__list"),sliderItems=document.querySelectorAll(".portfolio__list-item"),sliderControlsContainer=document.querySelector(".portfolio__list-controls"),sliderControls=["previous","next"],body=document.querySelector("body"),contactFormLabels=document.querySelectorAll(".contact__form-label"),contactFormTextArea=document.querySelector(".contact__form-textArea"),contactFormTextAreaLabel=document.querySelector(".contact__form-label--msg"),portfolioCarousel=new Carousel(sliderContainer,sliderItems,sliderControls),hamburgerBtn=document.querySelector(".nav__btn"),navMenu=document.querySelector(".nav__menu"),navMenuItems=document.querySelectorAll(".nav__menu-item")},prepareDOMEvents=function(){body.addEventListener("click",handleContactAnimation),window.addEventListener("scroll",elementInViewport),portfolioCarousel.setControls(),portfolioCarousel.useControls(),portfolioCarousel.startAutoSlide(),hamburgerBtn.addEventListener("click",handleNavAnimation),hamburgerBtn.addEventListener("click",function(){var t=hamburgerBtn.getAttribute("data-state");t&&"closed"!==t?(hamburgerBtn.setAttribute("data-state","closed"),hamburgerBtn.setAttribute("aria-expanded","false")):(hamburgerBtn.setAttribute("data-state","opened"),hamburgerBtn.setAttribute("aria-expanded","true"))})},Carousel=function(){function r(t,e,o){_classCallCheck(this,r),this.carouselContainer=t,this.carouselControls=o,this.carouselArray=_toConsumableArray(e),this.slideInterval=null,this.slideDelay=3e3}return _createClass(r,[{key:"updateGallery",value:function(){this.carouselArray.forEach(function(t){t.classList.remove("portfolio__list-item--1"),t.classList.remove("portfolio__list-item--2"),t.classList.remove("portfolio__list-item--3")}),this.carouselArray.slice(0,3).forEach(function(t,e){t.classList.add("portfolio__list-item--".concat(e+1))})}},{key:"setCurrentState",value:function(t){"portfolio__list-controls-next"==t.className?this.carouselArray.unshift(this.carouselArray.pop()):this.carouselArray.push(this.carouselArray.shift()),this.updateGallery()}},{key:"setControls",value:function(){this.carouselControls.forEach(function(t){sliderControlsContainer.appendChild(document.createElement("button")).className="portfolio__list-controls-".concat(t)})}},{key:"useControls",value:function(){var o=this;_toConsumableArray(sliderControlsContainer.childNodes).forEach(function(e){e.addEventListener("click",function(t){t.preventDefault(),o.setCurrentState(e),o.stopAutoSlide()})})}},{key:"startAutoSlide",value:function(){var t=this;this.slideInterval=setInterval(function(){t.setCurrentState(t.carouselControls[0])},this.slideDelay)}},{key:"stopAutoSlide",value:function(){clearInterval(this.slideInterval)}}]),r}();function elementInViewport(){var t=myElement.getBoundingClientRect();t.top>=-myElementHeight&&t.left>=-myElementWidth&&t.right<=(window.innerWidth||document.documentElement.clientWidth)+myElementWidth&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)+myElementHeight?(photoContainer.classList.add("aboutme__container-transformed"),photos[0].classList.add("aboutme__container-photo-transformed--fourth"),photos[1].classList.add("aboutme__container-photo-transformed--third"),photos[2].classList.add("aboutme__container-photo-transformed--second"),photos[3].classList.add("aboutme__container-photo-transformed--first")):(photoContainer.classList.remove("aboutme__container-transformed"),photos[0].classList.remove("aboutme__container-photo-transformed--fourth"),photos[1].classList.remove("aboutme__container-photo-transformed--third"),photos[2].classList.remove("aboutme__container-photo-transformed--second"),photos[3].classList.remove("aboutme__container-photo-transformed--first"))}window.onpointermove=function(t){var e=t.clientX,t=t.clientY;scrollY<=3300&&blob&&blob.animate({left:"".concat(e,"px"),top:"".concat(t+window.scrollY,"px")},{duration:3e3,fill:"forwards"})};var handleContactAnimation=function(t){t.target.matches(".contact__form-input")?(removeContactAnimation(),(label=t.target.closest("div").querySelector(".contact__form-label")).classList.add("contact__form-label--moved")):t.target.matches(".contact__form-textArea")?(removeContactAnimation(),(textAreaLabel=t.target.closest("div").querySelector(".contact__form-label")).classList.add("contact__form-label--msgMoved")):removeContactAnimation()},removeContactAnimation=function(){contactFormLabels.forEach(function(t){var e=t.getAttribute("for");""===document.getElementById(e).value.trim()&&t.classList.remove("contact__form-label--moved")}),""===contactFormTextArea.value.trim()&&contactFormTextAreaLabel.classList.remove("contact__form-label--msgMoved")},handleNavAnimation=function(){navMenu.classList.toggle("nav__menu--active"),console.log(navMenuItems),navMenuItems.forEach(function(t){t.addEventListener("click",function(){navMenu.classList.remove("nav__menu--active"),hamburgerBtn.setAttribute("data-state","closed"),hamburgerBtn.setAttribute("aria-expanded","false")})})};document.addEventListener("DOMContentLoaded",main);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJibG9iIiwicGhvdG9Db250YWluZXIiLCJwaG90b3MiLCJteUVsZW1lbnQiLCJib3VuZGluZyIsIm15RWxlbWVudEhlaWdodCIsIm15RWxlbWVudFdpZHRoIiwic2xpZGVyQ29udGFpbmVyIiwic2xpZGVySXRlbXMiLCJzbGlkZXJDb250cm9sc0NvbnRhaW5lciIsInNsaWRlckNvbnRyb2xzIiwiYm9keSIsImNvbnRhY3RGb3JtTGFiZWxzIiwiY29udGFjdEZvcm1UZXh0QXJlYSIsInByZXBhcmVET01FbGVtZW50cyIsInByZXBhcmVET01FdmVudHMiLCJjb250YWN0Rm9ybVRleHRBcmVhTGFiZWwiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0QXJlYUxhYmVsIiwicXVlcnlTZWxlY3RvckFsbCIsInBvcnRmb2xpb0Nhcm91c2VsIiwiZ2V0RWxlbWVudEJ5SWQiLCJoYW1idXJnZXJCdG4iLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJvZmZzZXRIZWlnaHQiLCJvZmZzZXRXaWR0aCIsIm5hdk1lbnUiLCJuYXZNZW51SXRlbXMiLCJoYW5kbGVDb250YWN0QW5pbWF0aW9uIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImVsZW1lbnRJblZpZXdwb3J0Iiwic2V0Q29udHJvbHMiLCJDYXJvdXNlbCIsImdldEF0dHJpYnV0ZSIsImN1cnJlbnRTdGF0ZSIsInVzZUNvbnRyb2xzIiwic2V0QXR0cmlidXRlIiwiY29udHJvbHMiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiY2Fyb3VzZWxDb250cm9scyIsInNsaWRlRGVsYXkiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsImNhcm91c2VsQXJyYXkiLCJjb250YWluZXIiLCJlbCIsImNsYXNzTGlzdCIsImNhcm91c2VsQ29udGFpbmVyIiwic2xpY2UiLCJmb3JFYWNoIiwiaSIsImFkZCIsImNvbmNhdCIsImRpcmVjdGlvbiIsInJlbW92ZSIsInBvcCIsInNoaWZ0IiwidXBkYXRlR2FsbGVyeSIsImNsYXNzTmFtZSIsImNvbnRyb2wiLCJhcHBlbmRDaGlsZCIsInVuc2hpZnQiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJjaGlsZE5vZGVzIiwiZSIsIl90aGlzIiwic2V0Q3VycmVudFN0YXRlIiwiX3RoaXMyIiwic2xpZGVJbnRlcnZhbCIsInNldEludGVydmFsIiwidHJpZ2dlcnMiLCJjbGVhckludGVydmFsIiwic3RvcEF1dG9TbGlkZSIsInRvcCIsImV2ZW50Iiwic2Nyb2xsWSIsImFuaW1hdGUiLCJpbm5lcldpZHRoIiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50V2lkdGgiLCJib3R0b20iLCJjbGllbnRYIiwiaW5uZXJIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJkdXJhdGlvbiIsImZpbGwiLCJvbnBvaW50ZXJtb3ZlIiwiY2xpZW50WSIsImxlZnQiLCJyZW1vdmVDb250YWN0QW5pbWF0aW9uIiwibGFiZWwiLCJ0YXJnZXQiLCJjbG9zZXN0IiwiaW5wdXRJZCIsInRyaW0iLCJoYW5kbGVOYXZBbmltYXRpb24iLCJjb25zb2xlIiwiaXRlbSIsIm1haW4iXSwibWFwcGluZ3MiOiJtaEVBQUEsSUFBSUEsS0FDQUMsZUFDQUMsT0FDQUMsVUFDQUMsU0FDQUMsZ0JBQ0FDLGVBQ0FDLGdCQUNBQyxZQUNBQyx3QkFDQUMsZUFDQUMsS0FDQUMsa0JBQ0FDLG9CQWJBYix5QkFDQUMsTUFDQUMsY0FDQUMsa0JBQ0FDLGFBQ0FDLFFBQ0FDLGFBRUFFLEtBQUFBLFdBQ0pNLG1CQUFJTCxFQUNKTSxpQkFBa0IsQ0FDbEIsRUFFSUYsbUJBQW1CLFdBQ3ZCYixLQUFJZ0IsU0FBQUEsY0FBd0IsT0FBQSxFQUM1QmYsZUFBU2dCLFNBQUFDLGNBQUEscUJBQUEsRUFDVGhCLE9BQUlpQixTQUFhQyxpQkFBQSwyQkFBQSxFQUNqQmpCLFVBQUlrQixTQUFpQkMsZUFBQSxjQUFBLEVBQ3JCbEIsU0FBSW1CLFVBQVlDLHNCQUFBLEVBQ2hCbkIsZ0JBQVdGLFVBQUFzQixhQUFB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QWdELEdBQ0FBLEVBQUF0RSxpQkFBQSxRQUFBLFdBRURKLFFBQU13RSxVQUFBQSxPQUFxQixtQkFBckJBLEVBQ0x4RSxhQUFRdUIsYUFBaUIsYUFBQSxRQUFvQixFQUM3Q2tELGFBQVl4RSxhQUFhLGdCQUFBLE9BQUEsQ0FDekJBLENBQUFBLENBTUEsQ0FBQyxDQUNGLEVBRUFYLFNBTEdNLGlCQUFhZSxtQkFBYWdFLElBQWlCIiwiZmlsZSI6InNjcmlwdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYmxvYlxyXG5sZXQgcGhvdG9Db250YWluZXJcclxubGV0IHBob3Rvc1xyXG5sZXQgbXlFbGVtZW50XHJcbmxldCBib3VuZGluZ1xyXG5sZXQgbXlFbGVtZW50SGVpZ2h0XHJcbmxldCBteUVsZW1lbnRXaWR0aFxyXG5sZXQgc2xpZGVyQ29udGFpbmVyXHJcbmxldCBzbGlkZXJJdGVtc1xyXG5sZXQgc2xpZGVyQ29udHJvbHNDb250YWluZXJcclxubGV0IHNsaWRlckNvbnRyb2xzXHJcbmxldCBib2R5XHJcbmxldCBjb250YWN0Rm9ybUxhYmVsc1xyXG5sZXQgY29udGFjdEZvcm1UZXh0QXJlYVxyXG5sZXQgY29udGFjdEZvcm1UZXh0QXJlYUxhYmVsXHJcbmxldCBsYWJlbFxyXG5sZXQgdGV4dEFyZWFMYWJlbFxyXG5sZXQgcG9ydGZvbGlvQ2Fyb3VzZWxcclxubGV0IGhhbWJ1cmdlckJ0blxyXG5sZXQgbmF2TWVudVxyXG5sZXQgbmF2TWVudUl0ZW1zXHJcblxyXG5jb25zdCBtYWluID0gKCkgPT4ge1xyXG5cdHByZXBhcmVET01FbGVtZW50cygpXHJcblx0cHJlcGFyZURPTUV2ZW50cygpXHJcbn1cclxuXHJcbmNvbnN0IHByZXBhcmVET01FbGVtZW50cyA9ICgpID0+IHtcclxuXHRibG9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJsb2InKVxyXG5cdHBob3RvQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFib3V0bWVfX2NvbnRhaW5lcicpXHJcblx0cGhvdG9zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFib3V0bWVfX2NvbnRhaW5lci1waG90bycpXHJcblx0bXlFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Fib3V0bWVQaG90bycpXHJcblx0Ym91bmRpbmcgPSBteUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcclxuXHRteUVsZW1lbnRIZWlnaHQgPSBteUVsZW1lbnQub2Zmc2V0SGVpZ2h0IC0gNDAwXHJcblx0bXlFbGVtZW50V2lkdGggPSBteUVsZW1lbnQub2Zmc2V0V2lkdGhcclxuXHRzbGlkZXJDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9ydGZvbGlvX19saXN0JylcclxuXHRzbGlkZXJJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3J0Zm9saW9fX2xpc3QtaXRlbScpXHJcblx0c2xpZGVyQ29udHJvbHNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9ydGZvbGlvX19saXN0LWNvbnRyb2xzJylcclxuXHRzbGlkZXJDb250cm9scyA9IFsncHJldmlvdXMnLCAnbmV4dCddXHJcblx0Ym9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKVxyXG5cdGNvbnRhY3RGb3JtTGFiZWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbnRhY3RfX2Zvcm0tbGFiZWwnKVxyXG5cdGNvbnRhY3RGb3JtVGV4dEFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGFjdF9fZm9ybS10ZXh0QXJlYScpXHJcblx0Y29udGFjdEZvcm1UZXh0QXJlYUxhYmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhY3RfX2Zvcm0tbGFiZWwtLW1zZycpXHJcblx0cG9ydGZvbGlvQ2Fyb3VzZWwgPSBuZXcgQ2Fyb3VzZWwoc2xpZGVyQ29udGFpbmVyLCBzbGlkZXJJdGVtcywgc2xpZGVyQ29udHJvbHMpXHJcblx0aGFtYnVyZ2VyQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdl9fYnRuJylcclxuXHRuYXZNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdl9fbWVudScpXHJcblx0bmF2TWVudUl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm5hdl9fbWVudS1pdGVtJylcclxufVxyXG5cclxuY29uc3QgcHJlcGFyZURPTUV2ZW50cyA9ICgpID0+IHtcclxuXHRib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQ29udGFjdEFuaW1hdGlvbilcclxuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZWxlbWVudEluVmlld3BvcnQpXHJcblx0cG9ydGZvbGlvQ2Fyb3VzZWwuc2V0Q29udHJvbHMoKVxyXG5cdHBvcnRmb2xpb0Nhcm91c2VsLnVzZUNvbnRyb2xzKClcclxuXHRwb3J0Zm9saW9DYXJvdXNlbC5zdGFydEF1dG9TbGlkZSgpXHJcblx0aGFtYnVyZ2VyQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlTmF2QW5pbWF0aW9uKVxyXG5cdGhhbWJ1cmdlckJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuXHRcdGNvbnN0IGN1cnJlbnRTdGF0ZSA9IGhhbWJ1cmdlckJ0bi5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdGUnKVxyXG5cclxuXHRcdGlmICghY3VycmVudFN0YXRlIHx8IGN1cnJlbnRTdGF0ZSA9PT0gJ2Nsb3NlZCcpIHtcclxuXHRcdFx0aGFtYnVyZ2VyQnRuLnNldEF0dHJpYnV0ZSgnZGF0YS1zdGF0ZScsICdvcGVuZWQnKVxyXG5cdFx0XHRoYW1idXJnZXJCdG4uc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ3RydWUnKVxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0aGFtYnVyZ2VyQnRuLnNldEF0dHJpYnV0ZSgnZGF0YS1zdGF0ZScsICdjbG9zZWQnKVxyXG5cdFx0XHRoYW1idXJnZXJCdG4uc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJylcclxuXHRcdH1cclxuXHR9KVxyXG59XHJcblxyXG5jbGFzcyBDYXJvdXNlbCB7XHJcblx0Y29uc3RydWN0b3IoY29udGFpbmVyLCBpdGVtcywgY29udHJvbHMpIHtcclxuXHRcdHRoaXMuY2Fyb3VzZWxDb250YWluZXIgPSBjb250YWluZXJcclxuXHRcdHRoaXMuY2Fyb3VzZWxDb250cm9scyA9IGNvbnRyb2xzXHJcblx0XHR0aGlzLmNhcm91c2VsQXJyYXkgPSBbLi4uaXRlbXNdXHJcblx0XHR0aGlzLnNsaWRlSW50ZXJ2YWwgPSBudWxsXHJcblx0XHR0aGlzLnNsaWRlRGVsYXkgPSAzMDAwXHJcblx0fVxyXG5cclxuXHR1cGRhdGVHYWxsZXJ5KCkge1xyXG5cdFx0dGhpcy5jYXJvdXNlbEFycmF5LmZvckVhY2goZWwgPT4ge1xyXG5cdFx0XHRlbC5jbGFzc0xpc3QucmVtb3ZlKCdwb3J0Zm9saW9fX2xpc3QtaXRlbS0tMScpXHJcblx0XHRcdGVsLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcnRmb2xpb19fbGlzdC1pdGVtLS0yJylcclxuXHRcdFx0ZWwuY2xhc3NMaXN0LnJlbW92ZSgncG9ydGZvbGlvX19saXN0LWl0ZW0tLTMnKVxyXG5cdFx0fSlcclxuXHJcblx0XHR0aGlzLmNhcm91c2VsQXJyYXkuc2xpY2UoMCwgMykuZm9yRWFjaCgoZWwsIGkpID0+IHtcclxuXHRcdFx0ZWwuY2xhc3NMaXN0LmFkZChgcG9ydGZvbGlvX19saXN0LWl0ZW0tLSR7aSArIDF9YClcclxuXHRcdH0pXHJcblx0fVxyXG5cclxuXHRzZXRDdXJyZW50U3RhdGUoZGlyZWN0aW9uKSB7XHJcblx0XHRpZiAoZGlyZWN0aW9uLmNsYXNzTmFtZSA9PSAncG9ydGZvbGlvX19saXN0LWNvbnRyb2xzLW5leHQnKSB7XHJcblx0XHRcdC8vIHRoaXMuY2Fyb3VzZWxBcnJheS5wdXNoKHRoaXMuY2Fyb3VzZWxBcnJheS5zaGlmdCgpKVxyXG5cdFx0XHR0aGlzLmNhcm91c2VsQXJyYXkudW5zaGlmdCh0aGlzLmNhcm91c2VsQXJyYXkucG9wKCkpXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHQvLyB0aGlzLmNhcm91c2VsQXJyYXkudW5zaGlmdCh0aGlzLmNhcm91c2VsQXJyYXkucG9wKCkpXHJcblx0XHRcdHRoaXMuY2Fyb3VzZWxBcnJheS5wdXNoKHRoaXMuY2Fyb3VzZWxBcnJheS5zaGlmdCgpKVxyXG5cdFx0fVxyXG5cdFx0dGhpcy51cGRhdGVHYWxsZXJ5KClcclxuXHR9XHJcblxyXG5cdHNldENvbnRyb2xzKCkge1xyXG5cdFx0dGhpcy5jYXJvdXNlbENvbnRyb2xzLmZvckVhY2goY29udHJvbCA9PiB7XHJcblx0XHRcdHNsaWRlckNvbnRyb2xzQ29udGFpbmVyLmFwcGVuZENoaWxkKFxyXG5cdFx0XHRcdGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXHJcblx0XHRcdCkuY2xhc3NOYW1lID0gYHBvcnRmb2xpb19fbGlzdC1jb250cm9scy0ke2NvbnRyb2x9YFxyXG5cdFx0fSlcclxuXHR9XHJcblxyXG5cdHVzZUNvbnRyb2xzKCkge1xyXG5cdFx0Y29uc3QgdHJpZ2dlcnMgPSBbLi4uc2xpZGVyQ29udHJvbHNDb250YWluZXIuY2hpbGROb2Rlc11cclxuXHRcdHRyaWdnZXJzLmZvckVhY2goY29udHJvbCA9PiB7XHJcblx0XHRcdGNvbnRyb2wuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcclxuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KClcclxuXHRcdFx0XHR0aGlzLnNldEN1cnJlbnRTdGF0ZShjb250cm9sKVxyXG5cdFx0XHRcdHRoaXMuc3RvcEF1dG9TbGlkZSgpXHJcblx0XHRcdH0pXHJcblx0XHR9KVxyXG5cdH1cclxuXHJcblx0c3RhcnRBdXRvU2xpZGUoKSB7XHJcblx0XHR0aGlzLnNsaWRlSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcblx0XHRcdHRoaXMuc2V0Q3VycmVudFN0YXRlKHRoaXMuY2Fyb3VzZWxDb250cm9sc1swXSlcclxuXHRcdH0sIHRoaXMuc2xpZGVEZWxheSlcclxuXHR9XHJcblxyXG5cdHN0b3BBdXRvU2xpZGUoKSB7XHJcblx0XHRjbGVhckludGVydmFsKHRoaXMuc2xpZGVJbnRlcnZhbClcclxuXHR9XHJcbn1cclxuXHJcbndpbmRvdy5vbnBvaW50ZXJtb3ZlID0gZXZlbnQgPT4ge1xyXG5cdGNvbnN0IHsgY2xpZW50WCwgY2xpZW50WSB9ID0gZXZlbnRcclxuXHJcblx0aWYgKHNjcm9sbFkgPD0gMzMwMCAmJiBibG9iKSB7XHJcblx0XHRibG9iLmFuaW1hdGUoXHJcblx0XHRcdHtcclxuXHRcdFx0XHRsZWZ0OiBgJHtjbGllbnRYfXB4YCxcclxuXHRcdFx0XHR0b3A6IGAke2NsaWVudFkgKyB3aW5kb3cuc2Nyb2xsWX1weGAsXHJcblx0XHRcdH0sXHJcblx0XHRcdHsgZHVyYXRpb246IDMwMDAsIGZpbGw6ICdmb3J3YXJkcycgfVxyXG5cdFx0KVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gZWxlbWVudEluVmlld3BvcnQoKSB7XHJcblx0Y29uc3QgYm91bmRpbmcgPSBteUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcclxuXHJcblx0aWYgKFxyXG5cdFx0Ym91bmRpbmcudG9wID49IC1teUVsZW1lbnRIZWlnaHQgJiZcclxuXHRcdGJvdW5kaW5nLmxlZnQgPj0gLW15RWxlbWVudFdpZHRoICYmXHJcblx0XHRib3VuZGluZy5yaWdodCA8PSAod2luZG93LmlubmVyV2lkdGggfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKSArIG15RWxlbWVudFdpZHRoICYmXHJcblx0XHRib3VuZGluZy5ib3R0b20gPD0gKHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KSArIG15RWxlbWVudEhlaWdodFxyXG5cdCkge1xyXG5cdFx0cGhvdG9Db250YWluZXIuY2xhc3NMaXN0LmFkZCgnYWJvdXRtZV9fY29udGFpbmVyLXRyYW5zZm9ybWVkJylcclxuXHRcdHBob3Rvc1swXS5jbGFzc0xpc3QuYWRkKCdhYm91dG1lX19jb250YWluZXItcGhvdG8tdHJhbnNmb3JtZWQtLWZvdXJ0aCcpXHJcblx0XHRwaG90b3NbMV0uY2xhc3NMaXN0LmFkZCgnYWJvdXRtZV9fY29udGFpbmVyLXBob3RvLXRyYW5zZm9ybWVkLS10aGlyZCcpXHJcblx0XHRwaG90b3NbMl0uY2xhc3NMaXN0LmFkZCgnYWJvdXRtZV9fY29udGFpbmVyLXBob3RvLXRyYW5zZm9ybWVkLS1zZWNvbmQnKVxyXG5cdFx0cGhvdG9zWzNdLmNsYXNzTGlzdC5hZGQoJ2Fib3V0bWVfX2NvbnRhaW5lci1waG90by10cmFuc2Zvcm1lZC0tZmlyc3QnKVxyXG5cdH0gZWxzZSB7XHJcblx0XHRwaG90b0NvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCdhYm91dG1lX19jb250YWluZXItdHJhbnNmb3JtZWQnKVxyXG5cdFx0cGhvdG9zWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ2Fib3V0bWVfX2NvbnRhaW5lci1waG90by10cmFuc2Zvcm1lZC0tZm91cnRoJylcclxuXHRcdHBob3Rvc1sxXS5jbGFzc0xpc3QucmVtb3ZlKCdhYm91dG1lX19jb250YWluZXItcGhvdG8tdHJhbnNmb3JtZWQtLXRoaXJkJylcclxuXHRcdHBob3Rvc1syXS5jbGFzc0xpc3QucmVtb3ZlKCdhYm91dG1lX19jb250YWluZXItcGhvdG8tdHJhbnNmb3JtZWQtLXNlY29uZCcpXHJcblx0XHRwaG90b3NbM10uY2xhc3NMaXN0LnJlbW92ZSgnYWJvdXRtZV9fY29udGFpbmVyLXBob3RvLXRyYW5zZm9ybWVkLS1maXJzdCcpXHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBoYW5kbGVDb250YWN0QW5pbWF0aW9uID0gZSA9PiB7XHJcblx0aWYgKGUudGFyZ2V0Lm1hdGNoZXMoJy5jb250YWN0X19mb3JtLWlucHV0JykpIHtcclxuXHRcdHJlbW92ZUNvbnRhY3RBbmltYXRpb24oKVxyXG5cdFx0bGFiZWwgPSBlLnRhcmdldC5jbG9zZXN0KCdkaXYnKS5xdWVyeVNlbGVjdG9yKCcuY29udGFjdF9fZm9ybS1sYWJlbCcpXHJcblx0XHRsYWJlbC5jbGFzc0xpc3QuYWRkKCdjb250YWN0X19mb3JtLWxhYmVsLS1tb3ZlZCcpXHJcblx0fSBlbHNlIGlmIChlLnRhcmdldC5tYXRjaGVzKCcuY29udGFjdF9fZm9ybS10ZXh0QXJlYScpKSB7XHJcblx0XHRyZW1vdmVDb250YWN0QW5pbWF0aW9uKClcclxuXHRcdHRleHRBcmVhTGFiZWwgPSBlLnRhcmdldC5jbG9zZXN0KCdkaXYnKS5xdWVyeVNlbGVjdG9yKCcuY29udGFjdF9fZm9ybS1sYWJlbCcpXHJcblx0XHR0ZXh0QXJlYUxhYmVsLmNsYXNzTGlzdC5hZGQoJ2NvbnRhY3RfX2Zvcm0tbGFiZWwtLW1zZ01vdmVkJylcclxuXHR9IGVsc2Uge1xyXG5cdFx0cmVtb3ZlQ29udGFjdEFuaW1hdGlvbigpXHJcblx0fVxyXG59XHJcblxyXG5jb25zdCByZW1vdmVDb250YWN0QW5pbWF0aW9uID0gKCkgPT4ge1xyXG5cdGNvbnRhY3RGb3JtTGFiZWxzLmZvckVhY2gobGFiZWwgPT4ge1xyXG5cdFx0Y29uc3QgaW5wdXRJZCA9IGxhYmVsLmdldEF0dHJpYnV0ZSgnZm9yJylcclxuXHRcdGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpXHJcblx0XHQvLyBjb25zb2xlLmxvZyhpbnB1dElkKTtcclxuXHRcdC8vIGNvbnNvbGUubG9nKGlucHV0RWxlbWVudCk7XHJcblxyXG5cdFx0aWYgKGlucHV0RWxlbWVudC52YWx1ZS50cmltKCkgPT09ICcnKSB7XHJcblx0XHRcdGxhYmVsLmNsYXNzTGlzdC5yZW1vdmUoJ2NvbnRhY3RfX2Zvcm0tbGFiZWwtLW1vdmVkJylcclxuXHRcdH1cclxuXHR9KVxyXG5cclxuXHRpZiAoY29udGFjdEZvcm1UZXh0QXJlYS52YWx1ZS50cmltKCkgPT09ICcnKSB7XHJcblx0XHRjb250YWN0Rm9ybVRleHRBcmVhTGFiZWwuY2xhc3NMaXN0LnJlbW92ZSgnY29udGFjdF9fZm9ybS1sYWJlbC0tbXNnTW92ZWQnKVxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgaGFuZGxlTmF2QW5pbWF0aW9uID0gKCkgPT4ge1xyXG5cdG5hdk1lbnUuY2xhc3NMaXN0LnRvZ2dsZSgnbmF2X19tZW51LS1hY3RpdmUnKVxyXG5cdGNvbnNvbGUubG9nKG5hdk1lbnVJdGVtcylcclxuXHRuYXZNZW51SXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuXHRcdGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcblx0XHRcdG5hdk1lbnUuY2xhc3NMaXN0LnJlbW92ZSgnbmF2X19tZW51LS1hY3RpdmUnKVxyXG5cdFx0XHRoYW1idXJnZXJCdG4uc2V0QXR0cmlidXRlKCdkYXRhLXN0YXRlJywgJ2Nsb3NlZCcpXHJcblx0XHRcdGhhbWJ1cmdlckJ0bi5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKVxyXG5cdFx0fSlcclxuXHR9KVxyXG59XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgbWFpbilcclxuIl19
