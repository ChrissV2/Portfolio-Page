"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){var o;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(o="Object"===(o=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:o)||"Set"===o?Array.from(t):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(t,e):void 0}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var o=0,r=new Array(e);o<e;o++)r[o]=t[o];return r}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,_toPropertyKey(r.key),r)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0===o)return("string"===e?String:Number)(t);o=o.call(t,e||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}var blob,photoContainer,photos,myElement,bounding,myElementHeight,myElementWidth,sliderContainer,sliderItems,sliderControlsContainer,sliderControls,body,contactFormLabels,contactFormTextArea,contactFormTextAreaLabel,label,textAreaLabel,portfolioCarousel,hamburgerBtn,navMenu,navMenuItems,main=function(){prepareDOMElements(),prepareDOMEvents()},prepareDOMElements=function(){blob=document.querySelector(".blob"),photoContainer=document.querySelector(".aboutme__container"),photos=document.querySelectorAll(".aboutme__container-photo"),myElement=document.getElementById("aboutmePhoto"),bounding=myElement.getBoundingClientRect(),myElementHeight=myElement.offsetHeight-400,myElementWidth=myElement.offsetWidth,sliderContainer=document.querySelector(".portfolio__list"),sliderItems=document.querySelectorAll(".portfolio__list-item"),sliderControlsContainer=document.querySelector(".portfolio__list-controls"),sliderControls=["previous","next"],body=document.querySelector("body"),contactFormLabels=document.querySelectorAll(".contact__form-label"),contactFormTextArea=document.querySelector(".contact__form-textArea"),contactFormTextAreaLabel=document.querySelector(".contact__form-label--msg"),portfolioCarousel=new Carousel(sliderContainer,sliderItems,sliderControls),hamburgerBtn=document.querySelector(".nav__btn"),navMenu=document.querySelector(".nav__menu"),navMenuItems=document.querySelectorAll(".nav__menu-item")},prepareDOMEvents=function(){body.addEventListener("click",handleContactAnimation),window.addEventListener("scroll",elementInViewport),portfolioCarousel.setControls(),portfolioCarousel.useControls(),portfolioCarousel.startAutoSlide(),hamburgerBtn.addEventListener("click",handleNavAnimation),hamburgerBtn.addEventListener("click",function(){var t=hamburgerBtn.getAttribute("data-state");t&&"closed"!==t?(hamburgerBtn.setAttribute("data-state","closed"),hamburgerBtn.setAttribute("aria-expanded","false")):(hamburgerBtn.setAttribute("data-state","opened"),hamburgerBtn.setAttribute("aria-expanded","true"))})},Carousel=function(){function r(t,e,o){_classCallCheck(this,r),this.carouselContainer=t,this.carouselControls=o,this.carouselArray=_toConsumableArray(e),this.slideInterval=null,this.slideDelay=3e3}return _createClass(r,[{key:"updateGallery",value:function(){this.carouselArray.forEach(function(t){t.classList.remove("portfolio__list-item--1"),t.classList.remove("portfolio__list-item--2"),t.classList.remove("portfolio__list-item--3")}),this.carouselArray.slice(0,3).forEach(function(t,e){t.classList.add("portfolio__list-item--".concat(e+1))})}},{key:"setCurrentState",value:function(t){"portfolio__list-controls-next"==t.className?this.carouselArray.unshift(this.carouselArray.pop()):this.carouselArray.push(this.carouselArray.shift()),this.updateGallery()}},{key:"setControls",value:function(){this.carouselControls.forEach(function(t){sliderControlsContainer.appendChild(document.createElement("button")).className="portfolio__list-controls-".concat(t)})}},{key:"useControls",value:function(){var o=this;_toConsumableArray(sliderControlsContainer.childNodes).forEach(function(e){e.addEventListener("click",function(t){t.preventDefault(),o.setCurrentState(e),o.stopAutoSlide()})})}},{key:"startAutoSlide",value:function(){var t=this;this.slideInterval=setInterval(function(){t.setCurrentState(t.carouselControls[0])},this.slideDelay)}},{key:"stopAutoSlide",value:function(){clearInterval(this.slideInterval)}}]),r}();function elementInViewport(){var t=myElement.getBoundingClientRect();t.top>=-myElementHeight&&t.left>=-myElementWidth&&t.right<=(window.innerWidth||document.documentElement.clientWidth)+myElementWidth&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)+myElementHeight?(photoContainer.classList.add("aboutme__container-transformed"),photos[0].classList.add("aboutme__container-photo-transformed--fourth"),photos[1].classList.add("aboutme__container-photo-transformed--third"),photos[2].classList.add("aboutme__container-photo-transformed--second"),photos[3].classList.add("aboutme__container-photo-transformed--first")):(photoContainer.classList.remove("aboutme__container-transformed"),photos[0].classList.remove("aboutme__container-photo-transformed--fourth"),photos[1].classList.remove("aboutme__container-photo-transformed--third"),photos[2].classList.remove("aboutme__container-photo-transformed--second"),photos[3].classList.remove("aboutme__container-photo-transformed--first"))}window.onpointermove=function(t){var e=t.clientX,t=t.clientY;scrollY<=3300&&blob&&blob.animate({left:"".concat(e,"px"),top:"".concat(t+window.scrollY,"px")},{duration:3e3,fill:"forwards"})};var handleContactAnimation=function(t){t.target.matches(".contact__form-input")?(removeContactAnimation(),(label=t.target.closest("div").querySelector(".contact__form-label")).classList.add("contact__form-label--moved")):t.target.matches(".contact__form-textArea")?(removeContactAnimation(),(textAreaLabel=t.target.closest("div").querySelector(".contact__form-label")).classList.add("contact__form-label--msgMoved")):removeContactAnimation()},removeContactAnimation=function(){contactFormLabels.forEach(function(t){var e=t.getAttribute("for");""===document.getElementById(e).value.trim()&&t.classList.remove("contact__form-label--moved")}),""===contactFormTextArea.value.trim()&&contactFormTextAreaLabel.classList.remove("contact__form-label--msgMoved")},handleNavAnimation=function(){navMenu.classList.toggle("nav__menu--active"),body.classList.toggle("overflowHidden"),navMenuItems.forEach(function(t){t.addEventListener("click",function(){navMenu.classList.remove("nav__menu--active"),hamburgerBtn.setAttribute("data-state","closed"),hamburgerBtn.setAttribute("aria-expanded","false"),body.classList.remove("overflowHidden")})})};document.addEventListener("DOMContentLoaded",main);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
